# Auto-generated using compose2nix v0.3.2-pre.
{ pkgs, lib, serviceOpts, secrets, ... }:

{

  # Containers
  virtualisation.oci-containers.containers."vaultwarden" = {
    image = "vaultwarden/server";
    environment = {
      "HOST_CONTAINERNAME" = "vaultwarden";
      "HOST_HOSTNAME" = "testvm";
      "HOST_OS" = "Nixos";
      "INVITATIONS_ALLOWED" = "true";
      "SERVER_ADMIN_EMAIL" = "${secrets.admin-mail.address}";
      "SIGNUPS_ALLOWED" = "true";
      "TCP_PORT_80" = "8080";
      "TZ" = "America/New_York";
    };
    volumes = [
      "${serviceOpts.dockerDir}/vaultwarden/config:/data:rw"
    ];
    log-driver = "journald";
    extraOptions = [
      "--network-alias=vaultwarden"
      "--network=swag_default"
    ];
  };
  systemd.services."docker-vaultwarden" = {
    serviceConfig = {
      Restart = lib.mkOverride 90 "always";
      RestartMaxDelaySec = lib.mkOverride 90 "1m";
      RestartSec = lib.mkOverride 90 "100ms";
      RestartSteps = lib.mkOverride 90 9;
    };
    partOf = [
      "docker-compose-vaultwarden-root.target"
    ];
    wantedBy = [
      "docker-compose-vaultwarden-root.target"
    ];
  };

  # Root service
  # When started, this will automatically create all resources and start
  # the containers. When stopped, this will teardown all resources.
  systemd.targets."docker-compose-vaultwarden-root" = {
    unitConfig = {
      Description = "Root target generated by compose2nix.";
    };
    wantedBy = [ "multi-user.target" ];
  };
}
