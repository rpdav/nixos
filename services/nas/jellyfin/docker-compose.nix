# Auto-generated using compose2nix v0.3.2-pre.
{
  pkgs,
  lib,
  uptix,
  config,
  ...
}: {
  # Containers
  virtualisation.oci-containers.containers."jellyfin" = {
    image = uptix.dockerImage "lscr.io/linuxserver/jellyfin:latest";
    environment = {
      "JELLYFIN_PublishedServerUrl" = "http://192.168.0.5";
      "PGID" = "1000";
      "PUID" = "1000";
      "TZ" = config.systemOpts.timezone;
    };
    volumes = [
      "/mnt/storage/media/movies:/data/movies:rw"
      "/mnt/storage/media/tvshows:/data/tvshows:rw"
      "${config.serviceOpts.dockerDir}/jellyfin/library:/config:rw"
    ];
    log-driver = "journald";
    extraOptions = [
      "--network-alias=jellyfin"
      "--network=proxynet"
    ];
  };
  systemd.services."docker-jellyfin" = {
    serviceConfig = {
      Restart = lib.mkOverride 90 "always";
      RestartMaxDelaySec = lib.mkOverride 90 "1m";
      RestartSec = lib.mkOverride 90 "100ms";
      RestartSteps = lib.mkOverride 90 9;
    };
    partOf = [
      "docker-compose-jellyfin-root.target"
    ];
    wantedBy = [
      "docker-compose-jellyfin-root.target"
    ];
  };

  # Root service
  # When started, this will automatically create all resources and start
  # the containers. When stopped, this will teardown all resources.
  systemd.targets."docker-compose-jellyfin-root" = {
    unitConfig = {
      Description = "Root target generated by compose2nix.";
    };
    wantedBy = ["multi-user.target"];
  };
}
