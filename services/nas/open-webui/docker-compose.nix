# Auto-generated using compose2nix v0.3.2-pre.
{
  pkgs,
  lib,
  config,
  uptix,
  ...
}: {
  # Containers
  virtualisation.oci-containers.containers."open-webui" = {
    image = uptix.dockerImage "ghcr.io/open-webui/open-webui:latest";
    environment = {
      "OLLAMA_BASE_URL" = "http://10.10.1.17:11434";
    };
    volumes = [
      "${config.serviceOpts.dockerDir}/open-webui/config:/app/backend/data:rw"
    ];
    log-driver = "journald";
    extraOptions = [
      "--network-alias=open-webui"
      "--network=proxynet"
    ];
  };
  systemd.services."docker-open-webui" = {
    serviceConfig = {
      Restart = lib.mkOverride 90 "always";
      RestartMaxDelaySec = lib.mkOverride 90 "1m";
      RestartSec = lib.mkOverride 90 "100ms";
      RestartSteps = lib.mkOverride 90 9;
    };
    after = [
      "docker-network-open-webui_default.service"
    ];
    requires = [
      "docker-network-open-webui_default.service"
    ];
    partOf = [
      "docker-compose-open-webui-root.target"
    ];
    wantedBy = [
      "docker-compose-open-webui-root.target"
    ];
  };

  # Networks
  systemd.services."docker-network-open-webui_default" = {
    path = [pkgs.docker];
    serviceConfig = {
      Type = "oneshot";
      RemainAfterExit = true;
      ExecStop = "docker network rm -f open-webui_default";
    };
    script = ''
      docker network inspect open-webui_default || docker network create open-webui_default
    '';
    partOf = ["docker-compose-open-webui-root.target"];
    wantedBy = ["docker-compose-open-webui-root.target"];
  };

  # Root service
  # When started, this will automatically create all resources and start
  # the containers. When stopped, this will teardown all resources.
  systemd.targets."docker-compose-open-webui-root" = {
    unitConfig = {
      Description = "Root target generated by compose2nix.";
    };
    wantedBy = ["multi-user.target"];
  };
}
