# Auto-generated using compose2nix v0.3.2-pre.
{
  config,
  uptix,
  lib,
  ...
}: {
  # Containers
  virtualisation.oci-containers.containers."flatnotes" = {
    image = uptix.dockerImage "dullage/flatnotes:latest";
    environment = {
      "FLATNOTES_AUTH_TYPE" = "password";
      "PGID" = "1000";
      "PUID" = "1000";
    };
    environmentFiles = [
      config.sops.secrets."selfhosting/flatnotes/env".path
    ];
    volumes = [
      "${config.serviceOpts.dockerDir}/flatnotes/data:/data:rw"
    ];
    log-driver = "journald";
    extraOptions = [
      "--network-alias=flatnotes"
      "--network=proxynet"
    ];
  };
  systemd.services."docker-flatnotes" = {
    serviceConfig = {
      Restart = lib.mkOverride 90 "always";
      RestartMaxDelaySec = lib.mkOverride 90 "1m";
      RestartSec = lib.mkOverride 90 "100ms";
      RestartSteps = lib.mkOverride 90 9;
    };
    partOf = [
      "docker-compose-flatnotes-root.target"
    ];
    wantedBy = [
      "docker-compose-flatnotes-root.target"
    ];
  };

  # Root service
  # When started, this will automatically create all resources and start
  # the containers. When stopped, this will teardown all resources.
  systemd.targets."docker-compose-flatnotes-root" = {
    unitConfig = {
      Description = "Root target generated by compose2nix.";
    };
    wantedBy = ["multi-user.target"];
  };
}
